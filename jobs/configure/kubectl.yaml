---
- name: Make sure user k8s config dir exists
  file:
    state: directory
    path: "/root/.kube"
- name: Grab a copy of the admin config
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ playbook_dir }}/configs/admin.conf"
  when: cluster.build == "k8s" and primary
- name: Copy k3s Config
  ansible.builtin.copy:
    src:  "{{ k3s.config }}"
    dest: "{{ user.config }}"
    remote_src: yes
    backup: yes
  when: cluster.build == "k3s"
- name: Copy k8s Config
  ansible.builtin.copy:
    src:  "{{ playbook_dir }}/configs/admin.conf"
    dest: "{{ user.config }}"
    remote_src: yes
    backup: yes
  when: cluster.build == "k8s" and not primary and k8type == "control"
- name: Make user kube config only for root's eyes
  ansible.builtin.file:
    path: /root/.kube/config
    state: file
    mode: '0700'
- name: Replace a localhost entry searching for a literal string to avoid escaping
  lineinfile:
    path: "{{ user.config }}"
    search_string: "    server: https://127.0.0.1:6443"
    line: "    server: https://{{ cluster.ip }}:6443"
- name: Add user definition
  ansible.builtin.lineinfile:
    path: "{{ user.config }}"
    line: "    username: {{ admin.username }}"
    regexp: "^( )*username:"
    create: yes
- name: Add user password definition
  ansible.builtin.lineinfile:
    path: "{{ user.config }}"
    line: "    password: {{ admin.password }}"
    regexp: "^( )*password:"
    create: yes
- name: Change config permissions
  file:
    path: "{{ user.config }}"
    mode: 700
    owner: root
    group: root
