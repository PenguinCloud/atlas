---
- stat: path=/etc/kubernetes/kubelet.conf
  register: kube_file
- name: Initialize Primary Control node
  shell: 'kubeadm init --control-plane-endpoint "{{ cluster.ip }}:{{ cluster.port }}" --upload-certs --pod-network-cidr={{ cluster.pod_cidr }} -v=9'
  register: kube_init
  when: primary and k8type=="control" and not kube_file.stat.exists
  tags:
    - primary
    - control
- name: Initialize Secondary Control nodes
  shell: 'kubeadm join {{ cluster.ip }}:{{ cluster.port }} --token {{ k8stoken }} --discovery-token-ca-cert-hash {{ k8shash }} --control-plane'
  register: kube_init
  when: not primary and k8type=="control" and not kube_file.stat.exists
  tags:
    - secondary
    - control
- name: Initialize Worker nodes
  shell: 'kubeadm join {{ cluster.ip }}:{{ cluster.port }} --token {{ k8stoken }} --discovery-token-ca-cert-hash {{ k8shash }}'
  register: kube_init
  when: k8type=="worker" and not kube_file.stat.exists
  tags:
    - worker
- name: results
  debug: var=kube_init.stdout_lines
- name: Copy the prior results somewhere... we'll wait a minute
  pause:
    minutes: 1
  when: not kube_file.stat.exists
- name: We'll make a copy just in case
  shell: echo '{{ kube_init.stdout }}' >> ~/mykubeinfo
  when: not kube_file.stat.exists
- name: "If you need it, you can run kubeadm token create --print-join-command on the primary host!"
  pause:
    minutes: 1

  
